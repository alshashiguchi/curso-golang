go vet - analisa o código
go build - compila o programa (./comandos)
go run - compila e executa
go run *.go compita todos os arquivos go
go get - instala pacotes
go test - realiza todos os testes da pasta selecionada
go test ./... - realiza todos os testes independente das pastas
go test -v - modo verboso
go test -cover
go test -coverprofile=resultado.out // vai gerar um arquivo
go tool cover -func=resultado.out // le o arquivo gerado.
go tool cover -html=resultado.out // gerar um arquivo html com resultado



Baixar pacote do github
go get -u github.com/alshashiguchi/goarea

SQL
go get -u github.com/go-sql-driver/mysql



*******************************
* Concorrência vs Paralelismo *
*******************************

Go é uma linguagem concorrente

Parelelismo - executar código simultaneamente em processadores físicos diferentes.

Concorrência - intercalar (administrar) vários processos ao mesmo tempo e isso pode
ocorrer em um único processador físico.

Concorrência viabiliza Paralelismo

É possível que a concorrência seja melhor que o paralelismo
Paralelismo exige muito mais do SO e do hardware.

Concorrência - é a forma de estruturar o seu programa.
É a composição de processos (tipicamente funções) que executam de forma independente.

docker run --name some-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -e MYSQL_DATABASE=dbname -d mysql:8
  docker run --name some-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=1234567 -e MYSQL_DATABASE=mysql -d mysql